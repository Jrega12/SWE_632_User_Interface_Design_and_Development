{"ast":null,"code":"var _jsxFileName = \"/Users/ramansrivastava/Documents/resume-master copy/src/components/sections/Languages.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Languages = _ref => {\n  let {\n    data,\n    color\n  } = _ref;\n  const languages = data.languages;\n  const loop = [1, 2, 3, 4, 5];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"languages\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading\",\n      style: {\n        color: `${color.primary}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons\",\n        style: {\n          color: `${color.primary}`\n        },\n        children: \"language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), \"Languages\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        borderColor: `${color.primary}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"languages-container\",\n      children: languages.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language\",\n            children: item.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"level\",\n            children: loop.map((num, i) => {\n              // if (num <= item.level) {\n              //   return <div key={i} className='indicator filled'></div>;\n              // } else {\n              //   return <div key={i} className='indicator'></div>;\n              // }\n              if (num <= item.level) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"material-icons star\",\n                  style: {\n                    color: `${color.primary}`\n                  },\n                  children: \"star\"\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 23\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"material-icons star\",\n                  style: {\n                    color: `${color.primary}`\n                  },\n                  children: \"star_outline\"\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 23\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Languages;\nexport default Languages;\nvar _c;\n$RefreshReg$(_c, \"Languages\");","map":{"version":3,"names":["React","Languages","data","color","languages","loop","primary","borderColor","map","item","index","language","num","i","level"],"sources":["/Users/ramansrivastava/Documents/resume-master copy/src/components/sections/Languages.js"],"sourcesContent":["import React from 'react';\n\nconst Languages = ({ data, color }) => {\n  const languages = data.languages;\n  const loop = [1, 2, 3, 4, 5];\n\n  return (\n    <div className='languages'>\n      <p className='heading' style={{ color: `${color.primary}` }}>\n        <span className='material-icons' style={{ color: `${color.primary}` }}>\n          language\n        </span>\n        Languages\n      </p>\n      <hr style={{ borderColor: `${color.primary}` }} />\n      <div className='languages-container'>\n        {languages.map((item, index) => {\n          return (\n            <div key={index} className='item'>\n              <div className='language'>{item.language}</div>\n              <div className='level'>\n                {loop.map((num, i) => {\n                  // if (num <= item.level) {\n                  //   return <div key={i} className='indicator filled'></div>;\n                  // } else {\n                  //   return <div key={i} className='indicator'></div>;\n                  // }\n                  if (num <= item.level) {\n                    return (\n                      <div\n                        key={i}\n                        className='material-icons star'\n                        style={{ color: `${color.primary}` }}\n                      >\n                        star\n                      </div>\n                    );\n                  } else {\n                    return (\n                      <div\n                        key={i}\n                        className='material-icons star'\n                        style={{ color: `${color.primary}` }}\n                      >\n                        star_outline\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Languages;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,SAAS,GAAG,QAAqB;EAAA,IAApB;IAAEC,IAAI;IAAEC;EAAM,CAAC;EAChC,MAAMC,SAAS,GAAGF,IAAI,CAACE,SAAS;EAChC,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE5B,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAG,SAAS,EAAC,SAAS;MAAC,KAAK,EAAE;QAAEF,KAAK,EAAG,GAAEA,KAAK,CAACG,OAAQ;MAAE,CAAE;MAAA,wBAC1D;QAAM,SAAS,EAAC,gBAAgB;QAAC,KAAK,EAAE;UAAEH,KAAK,EAAG,GAAEA,KAAK,CAACG,OAAQ;QAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE/D;IAAA;MAAA;MAAA;MAAA;IAAA,QAEL,eACJ;MAAI,KAAK,EAAE;QAAEC,WAAW,EAAG,GAAEJ,KAAK,CAACG,OAAQ;MAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAClD;MAAK,SAAS,EAAC,qBAAqB;MAAA,UACjCF,SAAS,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC9B,oBACE;UAAiB,SAAS,EAAC,MAAM;UAAA,wBAC/B;YAAK,SAAS,EAAC,UAAU;YAAA,UAAED,IAAI,CAACE;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAO,eAC/C;YAAK,SAAS,EAAC,OAAO;YAAA,UACnBN,IAAI,CAACG,GAAG,CAAC,CAACI,GAAG,EAAEC,CAAC,KAAK;cACpB;cACA;cACA;cACA;cACA;cACA,IAAID,GAAG,IAAIH,IAAI,CAACK,KAAK,EAAE;gBACrB,oBACE;kBAEE,SAAS,EAAC,qBAAqB;kBAC/B,KAAK,EAAE;oBAAEX,KAAK,EAAG,GAAEA,KAAK,CAACG,OAAQ;kBAAE,CAAE;kBAAA;gBAAA,GAFhCO,CAAC;kBAAA;kBAAA;kBAAA;gBAAA,QAKF;cAEV,CAAC,MAAM;gBACL,oBACE;kBAEE,SAAS,EAAC,qBAAqB;kBAC/B,KAAK,EAAE;oBAAEV,KAAK,EAAG,GAAEA,KAAK,CAACG,OAAQ;kBAAE,CAAE;kBAAA;gBAAA,GAFhCO,CAAC;kBAAA;kBAAA;kBAAA;gBAAA,QAKF;cAEV;YACF,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QACE;QAAA,GA/BEH,KAAK;UAAA;UAAA;UAAA;QAAA,QAgCT;MAEV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KAtDIT,SAAS;AAwDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}